/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 26>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <28 29>;
        };

        PrintScrn {
            bindings = <&kp LA(PRINTSCREEN)>;
            key-positions = <16 17>;
        };

        Delete {
            bindings = <&kp DEL>;
            key-positions = <10 11>;
            layers = <0 3>;
        };

        Pass {
            bindings = <&kp LC(LS(L))>;
            key-positions = <21 22>;
        };

        Cut {
            bindings = <&kp LC(X)>;
            key-positions = <25 26>;
        };

        Adjust {
            bindings = <&to 3>;
            key-positions = <37 40>;
        };

        F4_Combo {
            bindings = <&kp F4>;
            key-positions = <3 4>;
        };

        F5_Combo {
            bindings = <&kp F5>;
            key-positions = <4 5>;
        };

        F3_Combo {
            bindings = <&kp F3>;
            key-positions = <2 3>;
        };

        selall {
            bindings = <&kp LC(A)>;
            key-positions = <12 13>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <1 10>;
        };

        shift {
            bindings = <&kp ESCAPE>;
            key-positions = <35 23>;
        };

        winr {
            bindings = <&kp LG(LS(RIGHT))>;
            key-positions = <0 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R           &kp T        &kp Y           &kp U  &kp I       &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D      &kp F           &kp G        &kp H           &kp J  &kp K       &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V           &kp B        &kp N           &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp TILDE  &lt 1 LEFT_GUI  &kp SPACE    &mt LALT ENTER  &mo 2  &kp LA(F4)
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;

            display-name = "Exedox";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans      &kp N1        &kp NUMBER_2  &kp N3        &kp N4        &kp N5          &kp NUMBER_6  &kp N7          &kp N8          &kp N9        &kp N0           &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp F12       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &ext_power EP_ON
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans        &trans          &trans          &trans        &trans           &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET       &trans          &kp RALT
            >;

            display-name = "Utility";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;

            display-name = "Symbol";
        };

        Adjust_layer {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6     &kp KP_ASTERISK  &kp N7  &kp N8        &kp N9        &kp KP_PLUS   &kp BACKSPACE
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12    &kp KP_DIVIDE    &kp N4  &kp N5        &kp NUMBER_6  &kp KP_MINUS  &kp KP_EQUAL
&trans  &trans  &trans  &trans   &trans   &trans     &kp N0           &kp N1  &kp NUMBER_2  &kp N3        &kp PERIOD    &trans
                        &trans   &to 0    &trans     &trans           &tog 1  &trans
            >;

            display-name = "Adjust";
        };
    };
};
